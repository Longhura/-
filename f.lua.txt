-- Roblox Executor Script
-- Features: Draggable GUI, Minimize, Close, Player Targeting, Teleport, Noclip, Distance Adjustment, Auto Platform

-- Configuration (EDIT THESE VALUES)
local KEY = "123456" -- Change this to your desired key
local EXPIRATION_DATE = {
    Year = 2025,
    Month = 0,
    Day = 128,
    Hour = 0,
    Minute = 0,
    Second = 0
}

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Camera = workspace.CurrentCamera

-- State Variables
local NoClipping = false
local Authenticated = false
local Minimized = false
local AutoPlatform = false
local RunningAway = false
local FollowingTarget = false
local AutoNextTarget = false

-- Distance Settings
local DistanceBehind = 5
local DistanceAbove = 0
local DetectionRadius = 20

-- Target Variables
local TargetPlayer = nil
local PlayerList = {}

-- Create GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ExecutorGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 350, 0, 450)
MainFrame.Position = UDim2.new(0.5, -175, 0.5, -225)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Parent = ScreenGui

-- Add UICorner for rounded corners
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 8)
MainCorner.Parent = MainFrame

-- Add UIStroke for rainbow border
local MainStroke = Instance.new("UIStroke")
MainStroke.Thickness = 2
MainStroke.Color = Color3.fromRGB(255, 0, 0)
MainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
MainStroke.Parent = MainFrame

-- Title Bar
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

-- Add UICorner for title bar
local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 8)
TitleCorner.Parent = TitleBar

-- Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -60, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 16
Title.Font = Enum.Font.SourceSansBold
Title.Text = "Roblox Executor"
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
CloseButton.BorderSizePixel = 0
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 16
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.Text = "X"
CloseButton.Parent = TitleBar

-- Add UICorner for close button
local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 16
MinimizeButton.Font = Enum.Font.SourceSansBold
MinimizeButton.Text = "-"
MinimizeButton.Parent = TitleBar

-- Add UICorner for minimize button
local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 8)
MinimizeCorner.Parent = MinimizeButton

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 1, -30)
ContentFrame.Position = UDim2.new(0, 0, 0, 30)
ContentFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ContentFrame.BorderSizePixel = 0
ContentFrame.Parent = MainFrame

-- Authentication Frame
local AuthFrame = Instance.new("Frame")
AuthFrame.Name = "AuthFrame"
AuthFrame.Size = UDim2.new(1, 0, 1, 0)
AuthFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
AuthFrame.BorderSizePixel = 0
AuthFrame.Visible = true
AuthFrame.Parent = ContentFrame

local AuthTitle = Instance.new("TextLabel")
AuthTitle.Name = "AuthTitle"
AuthTitle.Size = UDim2.new(1, 0, 0, 40)
AuthTitle.Position = UDim2.new(0, 0, 0.1, 0)
AuthTitle.BackgroundTransparency = 1
AuthTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
AuthTitle.TextSize = 20
AuthTitle.Font = Enum.Font.SourceSansBold
AuthTitle.Text = "Enter Key to Continue"
AuthTitle.Parent = AuthFrame

local KeyInput = Instance.new("TextBox")
KeyInput.Name = "KeyInput"
KeyInput.Size = UDim2.new(0.8, 0, 0, 40)
KeyInput.Position = UDim2.new(0.1, 0, 0.3, 0)
KeyInput.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
KeyInput.BorderSizePixel = 0
KeyInput.TextColor3 = Color3.fromRGB(255, 255, 255)
KeyInput.TextSize = 16
KeyInput.Font = Enum.Font.SourceSans
KeyInput.PlaceholderText = "Enter Key Here..."
KeyInput.Text = ""
KeyInput.ClearTextOnFocus = false
KeyInput.Parent = AuthFrame

-- Add UICorner for key input
local KeyInputCorner = Instance.new("UICorner")
KeyInputCorner.CornerRadius = UDim.new(0, 8)
KeyInputCorner.Parent = KeyInput

local SubmitButton = Instance.new("TextButton")
SubmitButton.Name = "SubmitButton"
SubmitButton.Size = UDim2.new(0.5, 0, 0, 40)
SubmitButton.Position = UDim2.new(0.25, 0, 0.5, 0)
SubmitButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
SubmitButton.BorderSizePixel = 0
SubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SubmitButton.TextSize = 16
SubmitButton.Font = Enum.Font.SourceSansBold
SubmitButton.Text = "Submit"
SubmitButton.Parent = AuthFrame

-- Add UICorner for submit button
local SubmitCorner = Instance.new("UICorner")
SubmitCorner.CornerRadius = UDim.new(0, 8)
SubmitCorner.Parent = SubmitButton

-- Changed from key display to a note
local KeyNote = Instance.new("TextLabel")
KeyNote.Name = "KeyNote"
KeyNote.Size = UDim2.new(1, 0, 0, 30)
KeyNote.Position = UDim2.new(0, 0, 0.7, 0)
KeyNote.BackgroundTransparency = 1
KeyNote.TextColor3 = Color3.fromRGB(200, 200, 200)
KeyNote.TextSize = 14
KeyNote.Font = Enum.Font.SourceSans
KeyNote.Text = "Liên hệ admin để nhận key"
KeyNote.Parent = AuthFrame

-- Main Features Frame (Hidden until authenticated)
local FeaturesFrame = Instance.new("Frame")
FeaturesFrame.Name = "FeaturesFrame"
FeaturesFrame.Size = UDim2.new(1, 0, 1, 0)
FeaturesFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
FeaturesFrame.BorderSizePixel = 0
FeaturesFrame.Visible = false
FeaturesFrame.Parent = ContentFrame

-- Create ScrollingFrame for content
local ScrollFrame = Instance.new("ScrollingFrame")
ScrollFrame.Name = "ScrollFrame"
ScrollFrame.Size = UDim2.new(1, -10, 1, -10)
ScrollFrame.Position = UDim2.new(0, 5, 0, 5)
ScrollFrame.BackgroundTransparency = 1
ScrollFrame.BorderSizePixel = 0
ScrollFrame.ScrollBarThickness = 6
ScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 600) -- Will adjust based on content
ScrollFrame.Parent = FeaturesFrame

-- Create UIListLayout for organized content
local ListLayout = Instance.new("UIListLayout")
ListLayout.Padding = UDim.new(0, 10)
ListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
ListLayout.Parent = ScrollFrame

-- Section: Player Targeting
local TargetSection = Instance.new("Frame")
TargetSection.Name = "TargetSection"
TargetSection.Size = UDim2.new(0.95, 0, 0, 120)
TargetSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TargetSection.BorderSizePixel = 0
TargetSection.Parent = ScrollFrame

-- Add UICorner for target section
local TargetSectionCorner = Instance.new("UICorner")
TargetSectionCorner.CornerRadius = UDim.new(0, 8)
TargetSectionCorner.Parent = TargetSection

local TargetTitle = Instance.new("TextLabel")
TargetTitle.Name = "TargetTitle"
TargetTitle.Size = UDim2.new(1, 0, 0, 30)
TargetTitle.BackgroundTransparency = 1
TargetTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetTitle.TextSize = 16
TargetTitle.Font = Enum.Font.SourceSansBold
TargetTitle.Text = "Target Selection"
TargetTitle.Parent = TargetSection

local TargetDropdown = Instance.new("TextButton")
TargetDropdown.Name = "TargetDropdown"
TargetDropdown.Size = UDim2.new(0.6, 0, 0, 30)
TargetDropdown.Position = UDim2.new(0.05, 0, 0, 35)
TargetDropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TargetDropdown.BorderSizePixel = 0
TargetDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetDropdown.TextSize = 14
TargetDropdown.Font = Enum.Font.SourceSans
TargetDropdown.Text = "Select Target"
TargetDropdown.Parent = TargetSection

-- Add UICorner for target dropdown
local TargetDropdownCorner = Instance.new("UICorner")
TargetDropdownCorner.CornerRadius = UDim.new(0, 6)
TargetDropdownCorner.Parent = TargetDropdown

local ReloadButton = Instance.new("TextButton")
ReloadButton.Name = "ReloadButton"
ReloadButton.Size = UDim2.new(0.25, 0, 0, 30)
ReloadButton.Position = UDim2.new(0.7, 0, 0, 35)
ReloadButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ReloadButton.BorderSizePixel = 0
ReloadButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ReloadButton.TextSize = 14
ReloadButton.Font = Enum.Font.SourceSans
ReloadButton.Text = "Reload"
ReloadButton.Parent = TargetSection

-- Add UICorner for reload button
local ReloadCorner = Instance.new("UICorner")
ReloadCorner.CornerRadius = UDim.new(0, 6)
ReloadCorner.Parent = ReloadButton

local FollowButton = Instance.new("TextButton")
FollowButton.Name = "FollowButton"
FollowButton.Size = UDim2.new(0.45, 0, 0, 35)
FollowButton.Position = UDim2.new(0.05, 0, 0, 75)
FollowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
FollowButton.BorderSizePixel = 0
FollowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FollowButton.TextSize = 14
FollowButton.Font = Enum.Font.SourceSansBold
FollowButton.Text = "Follow: OFF"
FollowButton.Parent = TargetSection

-- Add UICorner for follow button
local FollowCorner = Instance.new("UICorner")
FollowCorner.CornerRadius = UDim.new(0, 6)
FollowCorner.Parent = FollowButton

local NextButton = Instance.new("TextButton")
NextButton.Name = "NextButton"
NextButton.Size = UDim2.new(0.45, 0, 0, 35)
NextButton.Position = UDim2.new(0.5, 0, 0, 75)
NextButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
NextButton.BorderSizePixel = 0
NextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NextButton.TextSize = 14
NextButton.Font = Enum.Font.SourceSansBold
NextButton.Text = "Auto Next: OFF"
NextButton.Parent = TargetSection

-- Add UICorner for next button
local NextCorner = Instance.new("UICorner")
NextCorner.CornerRadius = UDim.new(0, 6)
NextCorner.Parent = NextButton

-- Dropdown Frame for player selection
local DropdownFrame = Instance.new("Frame")
DropdownFrame.Name = "DropdownFrame"
DropdownFrame.Size = UDim2.new(0.6, 0, 0, 150)
DropdownFrame.Position = UDim2.new(0.05, 0, 0, 65)
DropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
DropdownFrame.BorderSizePixel = 0
DropdownFrame.Visible = false
DropdownFrame.ZIndex = 10
DropdownFrame.Parent = TargetSection

-- Add UICorner for dropdown frame
local DropdownFrameCorner = Instance.new("UICorner")
DropdownFrameCorner.CornerRadius = UDim.new(0, 6)
DropdownFrameCorner.Parent = DropdownFrame

-- ScrollingFrame for player list
local PlayerScrollFrame = Instance.new("ScrollingFrame")
PlayerScrollFrame.Name = "PlayerScrollFrame"
PlayerScrollFrame.Size = UDim2.new(1, -10, 1, -10)
PlayerScrollFrame.Position = UDim2.new(0, 5, 0, 5)
PlayerScrollFrame.BackgroundTransparency = 1
PlayerScrollFrame.BorderSizePixel = 0
PlayerScrollFrame.ScrollBarThickness = 4
PlayerScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Will adjust based on content
PlayerScrollFrame.ZIndex = 11
PlayerScrollFrame.Parent = DropdownFrame

-- UIListLayout for player list
local PlayerListLayout = Instance.new("UIListLayout")
PlayerListLayout.Padding = UDim.new(0, 5)
PlayerListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
PlayerListLayout.Parent = PlayerScrollFrame

-- Section: Distance Controls
local DistanceSection = Instance.new("Frame")
DistanceSection.Name = "DistanceSection"
DistanceSection.Size = UDim2.new(0.95, 0, 0, 150)
DistanceSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
DistanceSection.BorderSizePixel = 0
DistanceSection.Parent = ScrollFrame

-- Add UICorner for distance section
local DistanceSectionCorner = Instance.new("UICorner")
DistanceSectionCorner.CornerRadius = UDim.new(0, 8)
DistanceSectionCorner.Parent = DistanceSection

local DistanceTitle = Instance.new("TextLabel")
DistanceTitle.Name = "DistanceTitle"
DistanceTitle.Size = UDim2.new(1, 0, 0, 30)
DistanceTitle.BackgroundTransparency = 1
DistanceTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
DistanceTitle.TextSize = 16
DistanceTitle.Font = Enum.Font.SourceSansBold
DistanceTitle.Text = "Distance Controls"
DistanceTitle.Parent = DistanceSection

-- Horizontal Distance Controls
local HorizontalLabel = Instance.new("TextLabel")
HorizontalLabel.Name = "HorizontalLabel"
HorizontalLabel.Size = UDim2.new(0.4, 0, 0, 25)
HorizontalLabel.Position = UDim2.new(0.05, 0, 0, 35)
HorizontalLabel.BackgroundTransparency = 1
HorizontalLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalLabel.TextSize = 14
HorizontalLabel.Font = Enum.Font.SourceSans
HorizontalLabel.Text = "Behind:"
HorizontalLabel.TextXAlignment = Enum.TextXAlignment.Left
HorizontalLabel.Parent = DistanceSection

local HorizontalInput = Instance.new("TextBox")
HorizontalInput.Name = "HorizontalInput"
HorizontalInput.Size = UDim2.new(0.2, 0, 0, 25)
HorizontalInput.Position = UDim2.new(0.45, 0, 0, 35)
HorizontalInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
HorizontalInput.BorderSizePixel = 0
HorizontalInput.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalInput.TextSize = 14
HorizontalInput.Font = Enum.Font.SourceSans
HorizontalInput.Text = "5"
HorizontalInput.Parent = DistanceSection

-- Add UICorner for horizontal input
local HorizontalInputCorner = Instance.new("UICorner")
HorizontalInputCorner.CornerRadius = UDim.new(0, 6)
HorizontalInputCorner.Parent = HorizontalInput

local HorizontalPlus = Instance.new("TextButton")
HorizontalPlus.Name = "HorizontalPlus"
HorizontalPlus.Size = UDim2.new(0.1, 0, 0, 25)
HorizontalPlus.Position = UDim2.new(0.7, 0, 0, 35)
HorizontalPlus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
HorizontalPlus.BorderSizePixel = 0
HorizontalPlus.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalPlus.TextSize = 14
HorizontalPlus.Font = Enum.Font.SourceSansBold
HorizontalPlus.Text = "+"
HorizontalPlus.Parent = DistanceSection

-- Add UICorner for horizontal plus
local HorizontalPlusCorner = Instance.new("UICorner")
HorizontalPlusCorner.CornerRadius = UDim.new(0, 6)
HorizontalPlusCorner.Parent = HorizontalPlus

local HorizontalMinus = Instance.new("TextButton")
HorizontalMinus.Name = "HorizontalMinus"
HorizontalMinus.Size = UDim2.new(0.1, 0, 0, 25)
HorizontalMinus.Position = UDim2.new(0.85, 0, 0, 35)
HorizontalMinus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
HorizontalMinus.BorderSizePixel = 0
HorizontalMinus.TextColor3 = Color3.fromRGB(255, 255, 255)
HorizontalMinus.TextSize = 14
HorizontalMinus.Font = Enum.Font.SourceSansBold
HorizontalMinus.Text = "-"
HorizontalMinus.Parent = DistanceSection

-- Add UICorner for horizontal minus
local HorizontalMinusCorner = Instance.new("UICorner")
HorizontalMinusCorner.CornerRadius = UDim.new(0, 6)
HorizontalMinusCorner.Parent = HorizontalMinus

-- Vertical Distance Controls
local VerticalLabel = Instance.new("TextLabel")
VerticalLabel.Name = "VerticalLabel"
VerticalLabel.Size = UDim2.new(0.4, 0, 0, 25)
VerticalLabel.Position = UDim2.new(0.05, 0, 0, 70)
VerticalLabel.BackgroundTransparency = 1
VerticalLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalLabel.TextSize = 14
VerticalLabel.Font = Enum.Font.SourceSans
VerticalLabel.Text = "Above:"
VerticalLabel.TextXAlignment = Enum.TextXAlignment.Left
VerticalLabel.Parent = DistanceSection

local VerticalInput = Instance.new("TextBox")
VerticalInput.Name = "VerticalInput"
VerticalInput.Size = UDim2.new(0.2, 0, 0, 25)
VerticalInput.Position = UDim2.new(0.45, 0, 0, 70)
VerticalInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
VerticalInput.BorderSizePixel = 0
VerticalInput.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalInput.TextSize = 14
VerticalInput.Font = Enum.Font.SourceSans
VerticalInput.Text = "0"
VerticalInput.Parent = DistanceSection

-- Add UICorner for vertical input
local VerticalInputCorner = Instance.new("UICorner")
VerticalInputCorner.CornerRadius = UDim.new(0, 6)
VerticalInputCorner.Parent = VerticalInput

local VerticalPlus = Instance.new("TextButton")
VerticalPlus.Name = "VerticalPlus"
VerticalPlus.Size = UDim2.new(0.1, 0, 0, 25)
VerticalPlus.Position = UDim2.new(0.7, 0, 0, 70)
VerticalPlus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
VerticalPlus.BorderSizePixel = 0
VerticalPlus.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalPlus.TextSize = 14
VerticalPlus.Font = Enum.Font.SourceSansBold
VerticalPlus.Text = "+"
VerticalPlus.Parent = DistanceSection

-- Add UICorner for vertical plus
local VerticalPlusCorner = Instance.new("UICorner")
VerticalPlusCorner.CornerRadius = UDim.new(0, 6)
VerticalPlusCorner.Parent = VerticalPlus

local VerticalMinus = Instance.new("TextButton")
VerticalMinus.Name = "VerticalMinus"
VerticalMinus.Size = UDim2.new(0.1, 0, 0, 25)
VerticalMinus.Position = UDim2.new(0.85, 0, 0, 70)
VerticalMinus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
VerticalMinus.BorderSizePixel = 0
VerticalMinus.TextColor3 = Color3.fromRGB(255, 255, 255)
VerticalMinus.TextSize = 14
VerticalMinus.Font = Enum.Font.SourceSansBold
VerticalMinus.Text = "-"
VerticalMinus.Parent = DistanceSection

-- Add UICorner for vertical minus
local VerticalMinusCorner = Instance.new("UICorner")
VerticalMinusCorner.CornerRadius = UDim.new(0, 6)
VerticalMinusCorner.Parent = VerticalMinus

-- Detection Radius Controls
local RadiusLabel = Instance.new("TextLabel")
RadiusLabel.Name = "RadiusLabel"
RadiusLabel.Size = UDim2.new(0.4, 0, 0, 25)
RadiusLabel.Position = UDim2.new(0.05, 0, 0, 105)
RadiusLabel.BackgroundTransparency = 1
RadiusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusLabel.TextSize = 14
RadiusLabel.Font = Enum.Font.SourceSans
RadiusLabel.Text = "Detection Radius:"
RadiusLabel.TextXAlignment = Enum.TextXAlignment.Left
RadiusLabel.Parent = DistanceSection

local RadiusInput = Instance.new("TextBox")
RadiusInput.Name = "RadiusInput"
RadiusInput.Size = UDim2.new(0.2, 0, 0, 25)
RadiusInput.Position = UDim2.new(0.45, 0, 0, 105)
RadiusInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
RadiusInput.BorderSizePixel = 0
RadiusInput.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusInput.TextSize = 14
RadiusInput.Font = Enum.Font.SourceSans
RadiusInput.Text = "20"
RadiusInput.Parent = DistanceSection

-- Add UICorner for radius input
local RadiusInputCorner = Instance.new("UICorner")
RadiusInputCorner.CornerRadius = UDim.new(0, 6)
RadiusInputCorner.Parent = RadiusInput

local RadiusPlus = Instance.new("TextButton")
RadiusPlus.Name = "RadiusPlus"
RadiusPlus.Size = UDim2.new(0.1, 0, 0, 25)
RadiusPlus.Position = UDim2.new(0.7, 0, 0, 105)
RadiusPlus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
RadiusPlus.BorderSizePixel = 0
RadiusPlus.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusPlus.TextSize = 14
RadiusPlus.Font = Enum.Font.SourceSansBold
RadiusPlus.Text = "+"
RadiusPlus.Parent = DistanceSection

-- Add UICorner for radius plus
local RadiusPlusCorner = Instance.new("UICorner")
RadiusPlusCorner.CornerRadius = UDim.new(0, 6)
RadiusPlusCorner.Parent = RadiusPlus

local RadiusMinus = Instance.new("TextButton")
RadiusMinus.Name = "RadiusMinus"
RadiusMinus.Size = UDim2.new(0.1, 0, 0, 25)
RadiusMinus.Position = UDim2.new(0.85, 0, 0, 105)
RadiusMinus.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
RadiusMinus.BorderSizePixel = 0
RadiusMinus.TextColor3 = Color3.fromRGB(255, 255, 255)
RadiusMinus.TextSize = 14
RadiusMinus.Font = Enum.Font.SourceSansBold
RadiusMinus.Text = "-"
RadiusMinus.Parent = DistanceSection

-- Add UICorner for radius minus
local RadiusMinusCorner = Instance.new("UICorner")
RadiusMinusCorner.CornerRadius = UDim.new(0, 6)
RadiusMinusCorner.Parent = RadiusMinus

-- Section: Feature Buttons
local FeaturesButtonSection = Instance.new("Frame")
FeaturesButtonSection.Name = "FeaturesButtonSection"
FeaturesButtonSection.Size = UDim2.new(0.95, 0, 0, 180)
FeaturesButtonSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
FeaturesButtonSection.BorderSizePixel = 0
FeaturesButtonSection.Parent = ScrollFrame

-- Add UICorner for features button section
local FeaturesButtonSectionCorner = Instance.new("UICorner")
FeaturesButtonSectionCorner.CornerRadius = UDim.new(0, 8)
FeaturesButtonSectionCorner.Parent = FeaturesButtonSection

local FeaturesTitle = Instance.new("TextLabel")
FeaturesTitle.Name = "FeaturesTitle"
FeaturesTitle.Size = UDim2.new(1, 0, 0, 30)
FeaturesTitle.BackgroundTransparency = 1
FeaturesTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
FeaturesTitle.TextSize = 16
FeaturesTitle.Font = Enum.Font.SourceSansBold
FeaturesTitle.Text = "Features"
FeaturesTitle.Parent = FeaturesButtonSection

-- Noclip Button
local NoclipButton = Instance.new("TextButton")
NoclipButton.Name = "NoclipButton"
NoclipButton.Size = UDim2.new(0.45, 0, 0, 35)
NoclipButton.Position = UDim2.new(0.05, 0, 0, 35)
NoclipButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
NoclipButton.BorderSizePixel = 0
NoclipButton.TextColor3 = Color3.fromRGB(255, 255, 255)
NoclipButton.TextSize = 14
NoclipButton.Font = Enum.Font.SourceSansBold
NoclipButton.Text = "Noclip: OFF"
NoclipButton.Parent = FeaturesButtonSection

-- Add UICorner for noclip button
local NoclipCorner = Instance.new("UICorner")
NoclipCorner.CornerRadius = UDim.new(0, 6)
NoclipCorner.Parent = NoclipButton

-- Platform Button
local PlatformButton = Instance.new("TextButton")
PlatformButton.Name = "PlatformButton"
PlatformButton.Size = UDim2.new(0.45, 0, 0, 35)
PlatformButton.Position = UDim2.new(0.5, 0, 0, 35)
PlatformButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
PlatformButton.BorderSizePixel = 0
PlatformButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PlatformButton.TextSize = 14
PlatformButton.Font = Enum.Font.SourceSansBold
PlatformButton.Text = "Platform: OFF"
PlatformButton.Parent = FeaturesButtonSection

-- Add UICorner for platform button
local PlatformCorner = Instance.new("UICorner")
PlatformCorner.CornerRadius = UDim.new(0, 6)
PlatformCorner.Parent = PlatformButton

-- Run Button
local RunButton = Instance.new("TextButton")
RunButton.Name = "RunButton"
RunButton.Size = UDim2.new(0.45, 0, 0, 35)
RunButton.Position = UDim2.new(0.05, 0, 0, 80)
RunButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
RunButton.BorderSizePixel = 0
RunButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RunButton.TextSize = 14
RunButton.Font = Enum.Font.SourceSansBold
RunButton.Text = "Run Away: OFF"
RunButton.Parent = FeaturesButtonSection

-- Add UICorner for run button
local RunCorner = Instance.new("UICorner")
RunCorner.CornerRadius = UDim.new(0, 6)
RunCorner.Parent = RunButton

-- Auto Next Checkbox
local AutoNextCheck = Instance.new("Frame")
AutoNextCheck.Name = "AutoNextCheck"
AutoNextCheck.Size = UDim2.new(0.05, 0, 0, 20)
AutoNextCheck.Position = UDim2.new(0.5, 0, 0, 87.5)
AutoNextCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
AutoNextCheck.BorderSizePixel = 0
AutoNextCheck.Parent = FeaturesButtonSection

-- Add UICorner for auto next check
local AutoNextCheckCorner = Instance.new("UICorner")
AutoNextCheckCorner.CornerRadius = UDim.new(0, 4)
AutoNextCheckCorner.Parent = AutoNextCheck

local AutoNextLabel = Instance.new("TextLabel")
AutoNextLabel.Name = "AutoNextLabel"
AutoNextLabel.Size = UDim2.new(0.35, 0, 0, 35)
AutoNextLabel.Position = UDim2.new(0.6, 0, 0, 80)
AutoNextLabel.BackgroundTransparency = 1
AutoNextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoNextLabel.TextSize = 14
AutoNextLabel.Font = Enum.Font.SourceSans
AutoNextLabel.Text = "Auto Next Target"
AutoNextLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoNextLabel.Parent = FeaturesButtonSection

-- Auto Platform Checkbox
local AutoPlatformCheck = Instance.new("Frame")
AutoPlatformCheck.Name = "AutoPlatformCheck"
AutoPlatformCheck.Size = UDim2.new(0.05, 0, 0, 20)
AutoPlatformCheck.Position = UDim2.new(0.05, 0, 0, 132.5)
AutoPlatformCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
AutoPlatformCheck.BorderSizePixel = 0
AutoPlatformCheck.Parent = FeaturesButtonSection

-- Add UICorner for auto platform check
local AutoPlatformCheckCorner = Instance.new("UICorner")
AutoPlatformCheckCorner.CornerRadius = UDim.new(0, 4)
AutoPlatformCheckCorner.Parent = AutoPlatformCheck

local AutoPlatformLabel = Instance.new("TextLabel")
AutoPlatformLabel.Name = "AutoPlatformLabel"
AutoPlatformLabel.Size = UDim2.new(0.35, 0, 0, 35)
AutoPlatformLabel.Position = UDim2.new(0.15, 0, 0, 125)
AutoPlatformLabel.BackgroundTransparency = 1
AutoPlatformLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoPlatformLabel.TextSize = 14
AutoPlatformLabel.Font = Enum.Font.SourceSans
AutoPlatformLabel.Text = "Auto Platform"
AutoPlatformLabel.TextXAlignment = Enum.TextXAlignment.Left
AutoPlatformLabel.Parent = FeaturesButtonSection

-- Run Away Checkbox
local RunAwayCheck = Instance.new("Frame")
RunAwayCheck.Name = "RunAwayCheck"
RunAwayCheck.Size = UDim2.new(0.05, 0, 0, 20)
RunAwayCheck.Position = UDim2.new(0.5, 0, 0, 132.5)
RunAwayCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
RunAwayCheck.BorderSizePixel = 0
RunAwayCheck.Parent = FeaturesButtonSection

-- Add UICorner for run away check
local RunAwayCheckCorner = Instance.new("UICorner")
RunAwayCheckCorner.CornerRadius = UDim.new(0, 4)
RunAwayCheckCorner.Parent = RunAwayCheck

local RunAwayLabel = Instance.new("TextLabel")
RunAwayLabel.Name = "RunAwayLabel"
RunAwayLabel.Size = UDim2.new(0.35, 0, 0, 35)
RunAwayLabel.Position = UDim2.new(0.6, 0, 0, 125)
RunAwayLabel.BackgroundTransparency = 1
RunAwayLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
RunAwayLabel.TextSize = 14
RunAwayLabel.Font = Enum.Font.SourceSans
RunAwayLabel.Text = "Run on Detect"
RunAwayLabel.TextXAlignment = Enum.TextXAlignment.Left
RunAwayLabel.Parent = FeaturesButtonSection

-- Expiration Info
local ExpirationSection = Instance.new("Frame")
ExpirationSection.Name = "ExpirationSection"
ExpirationSection.Size = UDim2.new(0.95, 0, 0, 50)
ExpirationSection.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ExpirationSection.BorderSizePixel = 0
ExpirationSection.Parent = ScrollFrame

-- Add UICorner for expiration section
local ExpirationSectionCorner = Instance.new("UICorner")
ExpirationSectionCorner.CornerRadius = UDim.new(0, 8)
ExpirationSectionCorner.Parent = ExpirationSection

local ExpirationLabel = Instance.new("TextLabel")
ExpirationLabel.Name = "ExpirationLabel"
ExpirationLabel.Size = UDim2.new(1, 0, 1, 0)
ExpirationLabel.BackgroundTransparency = 1
ExpirationLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
ExpirationLabel.TextSize = 14
ExpirationLabel.Font = Enum.Font.SourceSans
ExpirationLabel.Text = "Expires: Loading..."
ExpirationLabel.Parent = ExpirationSection

-- Expired Frame (Hidden until expired)
local ExpiredFrame = Instance.new("Frame")
ExpiredFrame.Name = "ExpiredFrame"
ExpiredFrame.Size = UDim2.new(1, 0, 1, 0)
ExpiredFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
ExpiredFrame.BorderSizePixel = 0
ExpiredFrame.Visible = false
ExpiredFrame.Parent = ContentFrame

local ExpiredLabel = Instance.new("TextLabel")
ExpiredLabel.Name = "ExpiredLabel"
ExpiredLabel.Size = UDim2.new(1, 0, 0, 40)
ExpiredLabel.Position = UDim2.new(0, 0, 0.3, 0)
ExpiredLabel.BackgroundTransparency = 1
ExpiredLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
ExpiredLabel.TextSize = 20
ExpiredLabel.Font = Enum.Font.SourceSansBold
ExpiredLabel.Text = "Script Roblox này đã hết thời gian sử dụng"
ExpiredLabel.Parent = ExpiredFrame

local DeleteButton = Instance.new("TextButton")
DeleteButton.Name = "DeleteButton"
DeleteButton.Size = UDim2.new(0.6, 0, 0, 40)
DeleteButton.Position = UDim2.new(0.2, 0, 0.5, 0)
DeleteButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
DeleteButton.BorderSizePixel = 0
DeleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DeleteButton.TextSize = 16
DeleteButton.Font = Enum.Font.SourceSansBold
DeleteButton.Text = "Xóa Script"
DeleteButton.Parent = ExpiredFrame

-- Add UICorner for delete button
local DeleteCorner = Instance.new("UICorner")
DeleteCorner.CornerRadius = UDim.new(0, 8)
DeleteCorner.Parent = DeleteButton

-- Icon for minimized state
local MinimizedIcon = Instance.new("ImageButton")
MinimizedIcon.Name = "MinimizedIcon"
MinimizedIcon.Size = UDim2.new(0, 50, 0, 50)
MinimizedIcon.Position = UDim2.new(0, 10, 0, 10)
MinimizedIcon.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MinimizedIcon.BorderSizePixel = 0
MinimizedIcon.Image = "rbxassetid://6034684949" -- Generic script icon
MinimizedIcon.Visible = false
MinimizedIcon.Parent = ScreenGui

-- Add UICorner for minimized icon
local MinimizedIconCorner = Instance.new("UICorner")
MinimizedIconCorner.CornerRadius = UDim.new(0, 8)
MinimizedIconCorner.Parent = MinimizedIcon

-- Add UIStroke for minimized icon
local MinimizedIconStroke = Instance.new("UIStroke")
MinimizedIconStroke.Thickness = 2
MinimizedIconStroke.Color = Color3.fromRGB(255, 0, 0)
MinimizedIconStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
MinimizedIconStroke.Parent = MinimizedIcon

-- Functions
local function CheckExpiration()
    local currentTime = os.time()
    local expirationTime = os.time({
        year = EXPIRATION_DATE.Year,
        month = EXPIRATION_DATE.Month,
        day = EXPIRATION_DATE.Day,
        hour = EXPIRATION_DATE.Hour,
        min = EXPIRATION_DATE.Minute,
        sec = EXPIRATION_DATE.Second
    })

    local timeLeft = expirationTime - currentTime

    if timeLeft <= 0 then
        -- Script has expired
        AuthFrame.Visible = false
        FeaturesFrame.Visible = false
        ExpiredFrame.Visible = true
        return true
    else
        -- Calculate time left
        local days = math.floor(timeLeft / 86400)
        local hours = math.floor((timeLeft % 86400) / 3600)
        local minutes = math.floor((timeLeft % 3600) / 60)
        local seconds = timeLeft % 60
        
        ExpirationLabel.Text = string.format("Expires in: %d days, %02d:%02d:%02d", days, hours, minutes, seconds)
        return false
    end
end

-- Rainbow border effect
local function StartRainbowEffect()
    local colors = {
        Color3.fromRGB(255, 0, 0),    -- Red
        Color3.fromRGB(255, 165, 0),  -- Orange
        Color3.fromRGB(255, 255, 0),  -- Yellow
        Color3.fromRGB(0, 255, 0),    -- Green
        Color3.fromRGB(0, 0, 255),    -- Blue
        Color3.fromRGB(75, 0, 130),   -- Indigo
        Color3.fromRGB(238, 130, 238) -- Violet
    }
    
    local index = 1
    
    spawn(function()
        while ScreenGui.Parent do
            local targetColor = colors[index]
            local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear)
            
            local mainTween = TweenService:Create(MainStroke, tweenInfo, {Color = targetColor})
            local iconTween = TweenService:Create(MinimizedIconStroke, tweenInfo, {Color = targetColor})
            
            mainTween:Play()
            iconTween:Play()
            
            index = (index % #colors) + 1
            wait(0.5)
        end
    end)
end

-- Player list functions
local function PopulatePlayerList()
    -- Clear existing buttons
    for _, child in pairs(PlayerScrollFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    -- Clear player list
    PlayerList = {}
    
    -- Add all players except local player
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(PlayerList, player)
            
            local playerButton = Instance.new("TextButton")
            playerButton.Name = player.Name .. "Button"
            playerButton.Size = UDim2.new(0.9, 0, 0, 30)
            playerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            playerButton.BorderSizePixel = 0
            playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            playerButton.TextSize = 14
            playerButton.Font = Enum.Font.SourceSans
            playerButton.Text = player.Name
            playerButton.ZIndex = 12
            playerButton.Parent = PlayerScrollFrame
            
            -- Add UICorner for player button
            local playerButtonCorner = Instance.new("UICorner")
            playerButtonCorner.CornerRadius = UDim.new(0, 4)
            playerButtonCorner.Parent = playerButton
            
            playerButton.MouseButton1Click:Connect(function()
                TargetPlayer = player
                TargetDropdown.Text = player.Name
                DropdownFrame.Visible = false
            end)
        end
    end
    
    -- Update canvas size
    PlayerScrollFrame.CanvasSize = UDim2.new(0, 0, 0, #PlayerList * 35)
end

-- Toggle noclip function
local function ToggleNoclip()
    NoClipping = not NoClipping
    
    if NoClipping then
        NoclipButton.Text = "Noclip: ON"
        NoclipButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        
        -- Enable noclip
        local noclipConnection = RunService.Stepped:Connect(function()
            if Character and NoClipping then
                for _, part in pairs(Character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = false
                    end
                end
            end
        end)
        
        -- Store the connection
        NoclipButton.NoclipConnection = noclipConnection
    else
        NoclipButton.Text = "Noclip: OFF"
        NoclipButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
        
        -- Disable noclip
        if NoclipButton.NoclipConnection then
            NoclipButton.NoclipConnection:Disconnect()
            NoclipButton.NoclipConnection = nil
        end
        
        -- Reset collision
        for _, part in pairs(Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

-- Platform function
local function TogglePlatform()
    AutoPlatform = not AutoPlatform
    
    if AutoPlatform then
        PlatformButton.Text = "Platform: ON"
        PlatformButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        AutoPlatformCheck.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        
        -- Create platform
        local platform = Instance.new("Part")
        platform.Name = "ExecutorPlatform"
        platform.Size = Vector3.new(5, 1, 5)
        platform.Anchored = true
        platform.CanCollide = true
        platform.Transparency = 0.5
        platform.Material = Enum.Material.Neon
        platform.Color = Color3.fromRGB(0, 120, 255)
        platform.Parent = workspace
        
        -- Platform update loop
        local platformConnection = RunService.Heartbeat:Connect(function()
            if AutoPlatform and Character and Character:FindFirstChild("HumanoidRootPart") then
                platform.CFrame = CFrame.new(HumanoidRootPart.Position.X, HumanoidRootPart.Position.Y - 3.5, HumanoidRootPart.Position.Z)
            end
        end)
        
        -- Store references
        PlatformButton.Platform = platform
        PlatformButton.PlatformConnection = platformConnection
    else
        PlatformButton.Text = "Platform: OFF"
        PlatformButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
        AutoPlatformCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        
        -- Remove platform
        if PlatformButton.Platform and PlatformButton.Platform:IsDescendantOf(workspace) then
            PlatformButton.Platform:Destroy()
            PlatformButton.Platform = nil
        end
        
        -- Disconnect update loop
        if PlatformButton.PlatformConnection then
            PlatformButton.PlatformConnection:Disconnect()
            PlatformButton.PlatformConnection = nil
        end
    end
end

-- Follow target function
local function ToggleFollowTarget()
    FollowingTarget = not FollowingTarget
    
    if FollowingTarget then
        if not TargetPlayer or not TargetPlayer.Character then
            FollowingTarget = false
            return
        end
        
        FollowButton.Text = "Follow: ON"
        FollowButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        
        -- Get distance values
        DistanceBehind = tonumber(HorizontalInput.Text) or 5
        DistanceAbove = tonumber(VerticalInput.Text) or 0
        
        -- Follow loop
        local followConnection = RunService.Heartbeat:Connect(function()
            if FollowingTarget and TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("HumanoidRootPart") and Character and Character:FindFirstChild("HumanoidRootPart") then
                local targetHRP = TargetPlayer.Character.HumanoidRootPart
                local targetHumanoid = TargetPlayer.Character:FindFirstChild("Humanoid")
                
                -- Check if target is dead and auto next is enabled
                if AutoNextTarget and targetHumanoid and targetHumanoid.Health <= 0 then
                    -- Find next target
                    local foundNext = false
                    for _, player in pairs(PlayerList) do
                        if player ~= TargetPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
                            TargetPlayer = player
                            TargetDropdown.Text = player.Name
                            foundNext = true
                            break
                        end
                    end
                    
                    if not foundNext then
                        FollowingTarget = false
                        FollowButton.Text = "Follow: OFF"
                        FollowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
                        followConnection:Disconnect()
                    end
                else
                    -- Calculate position behind target
                    local targetLookVector = targetHRP.CFrame.LookVector
                    local behindPosition = targetHRP.Position - (targetLookVector * DistanceBehind)
                    behindPosition = behindPosition + Vector3.new(0, DistanceAbove, 0)
                    
                    -- Teleport behind target
                    HumanoidRootPart.CFrame = CFrame.new(behindPosition, targetHRP.Position)
                end
            end
        end)
        
        -- Store connection
        FollowButton.FollowConnection = followConnection
    else
        FollowButton.Text = "Follow: OFF"
        FollowButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
        
        -- Disconnect follow loop
        if FollowButton.FollowConnection then
            FollowButton.FollowConnection:Disconnect()
            FollowButton.FollowConnection = nil
        end
    end
end

-- Run away function
local function ToggleRunAway()
    RunningAway = not RunningAway
    
    if RunningAway then
        RunButton.Text = "Run Away: ON"
        RunButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        RunAwayCheck.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        
        -- Get detection radius
        DetectionRadius = tonumber(RadiusInput.Text) or 20
        
        -- Run away loop
        local runConnection = RunService.Heartbeat:Connect(function()
            if RunningAway and Character and Character:FindFirstChild("HumanoidRootPart") then
                -- Check for nearby players
                for _, player in pairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local distance = (HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                        
                        if distance <= DetectionRadius then
                            -- Calculate escape position (100 studs away in opposite direction)
                            local direction = (HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Unit
                            local escapePosition = HumanoidRootPart.Position + direction * 100
                            
                            -- Teleport to escape position
                            HumanoidRootPart.CFrame = CFrame.new(escapePosition, escapePosition + HumanoidRootPart.CFrame.LookVector)
                            break
                        end
                    end
                end
            end
        end)
        
        -- Store connection
        RunButton.RunConnection = runConnection
    else
        RunButton.Text = "Run Away: OFF"
        RunButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
        RunAwayCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        
        -- Disconnect run away loop
        if RunButton.RunConnection then
            RunButton.RunConnection:Disconnect()
            RunButton.RunConnection = nil
        end
    end
end

-- Toggle auto next target
local function ToggleAutoNext()
    AutoNextTarget = not AutoNextTarget
    
    if AutoNextTarget then
        NextButton.Text = "Auto Next: ON"
        NextButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
        AutoNextCheck.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    else
        NextButton.Text = "Auto Next: OFF"
        NextButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        AutoNextCheck.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end
end

-- Limit dragging to screen bounds
local function LimitDragging()
    local screenSize = workspace.CurrentCamera.ViewportSize
    local frameSize = MainFrame.AbsoluteSize
    local minX = 0
    local minY = 0
    local maxX = screenSize.X - frameSize.X
    local maxY = screenSize.Y - frameSize.Y
    
    local newX = math.clamp(MainFrame.AbsolutePosition.X, minX, maxX)
    local newY = math.clamp(MainFrame.AbsolutePosition.Y, minY, maxY)
    
    if MainFrame.AbsolutePosition.X ~= newX or MainFrame.AbsolutePosition.Y ~= newY then
        MainFrame.Position = UDim2.new(0, newX, 0, newY)
    end
end

local function LimitIconDragging()
    local screenSize = workspace.CurrentCamera.ViewportSize
    local iconSize = MinimizedIcon.AbsoluteSize
    local minX = 0
    local minY = 0
    local maxX = screenSize.X - iconSize.X
    local maxY = screenSize.Y - iconSize.Y
    
    local newX = math.clamp(MinimizedIcon.AbsolutePosition.X, minX, maxX)
    local newY = math.clamp(MinimizedIcon.AbsolutePosition.Y, minY, maxY)
    
    if MinimizedIcon.AbsolutePosition.X ~= newX or MinimizedIcon.AbsolutePosition.Y ~= newY then
        MinimizedIcon.Position = UDim2.new(0, newX, 0, newY)
    end
end

-- Event Connections
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    
    -- Clean up
    if NoClipping then
        ToggleNoclip()
    end
    if AutoPlatform then
        TogglePlatform()
    end
    if FollowingTarget then
        ToggleFollowTarget()
    end
    if RunningAway then
        ToggleRunAway()
    end
end)

MinimizeButton.MouseButton1Click:Connect(function()
    Minimized = true
    MainFrame.Visible = false
    MinimizedIcon.Visible = true
end)

MinimizedIcon.MouseButton1Click:Connect(function()
    Minimized = false
    MainFrame.Visible = true
    MinimizedIcon.Visible = false
end)

-- Make MinimizedIcon draggable
MinimizedIcon.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local initialPos = MinimizedIcon.Position
        local mousePos = UserInputService:GetMouseLocation()
        local offset = UDim2.new(0, mousePos.X - MinimizedIcon.AbsolutePosition.X, 0, mousePos.Y - MinimizedIcon.AbsolutePosition.Y)
        
        local connection
        connection = UserInputService.InputChanged:Connect(function(newInput)
            if newInput.UserInputType == Enum.UserInputType.MouseMovement then
                local newPos = UDim2.new(0, newInput.Position.X - offset.X.Offset, 0, newInput.Position.Y - offset.Y.Offset)
                MinimizedIcon.Position = newPos
                LimitIconDragging()
            end
        end)
        
        UserInputService.InputEnded:Connect(function(endInput)
            if endInput.UserInputType == Enum.UserInputType.MouseButton1 then
                if connection then
                    connection:Disconnect()
                end
            end
        end)
    end
end)

-- Limit MainFrame dragging
RunService.RenderStepped:Connect(function()
    if MainFrame.Visible then
        LimitDragging()
    end
end)

SubmitButton.MouseButton1Click:Connect(function()
    if KeyInput.Text == KEY then
        Authenticated = true
        AuthFrame.Visible = false
        FeaturesFrame.Visible = true
        PopulatePlayerList() -- Initialize player list
    else
        KeyInput.Text = ""
        KeyInput.PlaceholderText = "Invalid Key! Try Again..."
    end
end)

TargetDropdown.MouseButton1Click:Connect(function()
    DropdownFrame.Visible = not DropdownFrame.Visible
end)

ReloadButton.MouseButton1Click:Connect(function()
    PopulatePlayerList()
end)

FollowButton.MouseButton1Click:Connect(function()
    ToggleFollowTarget()
end)

NextButton.MouseButton1Click:Connect(function()
    ToggleAutoNext()
end)

NoclipButton.MouseButton1Click:Connect(function()
    ToggleNoclip()
end)

PlatformButton.MouseButton1Click:Connect(function()
    TogglePlatform()
end)

RunButton.MouseButton1Click:Connect(function()
    ToggleRunAway()
end)

-- Distance control buttons
HorizontalPlus.MouseButton1Click:Connect(function()
    local currentValue = tonumber(HorizontalInput.Text) or 5
    HorizontalInput.Text = tostring(currentValue + 0.5)
    DistanceBehind = currentValue + 0.5
end)

HorizontalMinus.MouseButton1Click:Connect(function()
    local currentValue = tonumber(HorizontalInput.Text) or 5
    HorizontalInput.Text = tostring(math.max(0, currentValue - 0.5))
    DistanceBehind = math.max(0, currentValue - 0.5)
end)

VerticalPlus.MouseButton1Click:Connect(function()
    local currentValue = tonumber(VerticalInput.Text) or 0
    VerticalInput.Text = tostring(currentValue + 0.5)
    DistanceAbove = currentValue + 0.5
end)

VerticalMinus.MouseButton1Click:Connect(function()
    local currentValue = tonumber(VerticalInput.Text) or 0
    VerticalInput.Text = tostring(currentValue - 0.5)
    DistanceAbove = currentValue - 0.5
end)

RadiusPlus.MouseButton1Click:Connect(function()
    local currentValue = tonumber(RadiusInput.Text) or 20
    RadiusInput.Text = tostring(currentValue + 5)
    DetectionRadius = currentValue + 5
end)

RadiusMinus.MouseButton1Click:Connect(function()
    local currentValue = tonumber(RadiusInput.Text) or 20
    RadiusInput.Text = tostring(math.max(5, currentValue - 5))
    DetectionRadius = math.max(5, currentValue - 5)
end)

-- Checkbox toggles
AutoNextCheck.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        ToggleAutoNext()
    end
end)

AutoPlatformCheck.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        TogglePlatform()
    end
end)

RunAwayCheck.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        ToggleRunAway()
    end
end)

DeleteButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Text input validation
HorizontalInput.FocusLost:Connect(function()
    local value = tonumber(HorizontalInput.Text)
    if value then
        DistanceBehind = value
    else
        HorizontalInput.Text = tostring(DistanceBehind)
    end
end)

VerticalInput.FocusLost:Connect(function()
    local value = tonumber(VerticalInput.Text)
    if value then
        DistanceAbove = value
    else
        VerticalInput.Text = tostring(DistanceAbove)
    end
end)

RadiusInput.FocusLost:Connect(function()
    local value = tonumber(RadiusInput.Text)
    if value and value >= 5 then
        DetectionRadius = value
    else
        RadiusInput.Text = tostring(DetectionRadius)
    end
end)

-- Check expiration on a timer
local expirationChecker = task.spawn(function()
    while task.wait(1) do
        if CheckExpiration() then
            break
        end
    end
end)

-- Character respawn handling
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

    -- Reset states if needed
    if NoClipping then
        ToggleNoclip()
        task.wait(0.5)
        ToggleNoclip()
    end
    
    if AutoPlatform then
        TogglePlatform()
        task.wait(0.5)
        TogglePlatform()
    end
    
    if FollowingTarget then
        ToggleFollowTarget()
        task.wait(0.5)
        ToggleFollowTarget()
    end
    
    if RunningAway then
        ToggleRunAway()
        task.wait(0.5)
        ToggleRunAway()
    end
end)

-- Player joining/leaving handling
Players.PlayerAdded:Connect(function(player)
    if Authenticated then
        PopulatePlayerList()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    if Authenticated then
        -- Check if removed player was the target
        if TargetPlayer == player then
            TargetPlayer = nil
            TargetDropdown.Text = "Select Target"
            
            -- Turn off following if target left
            if FollowingTarget then
                ToggleFollowTarget()
            end
        end
        
        PopulatePlayerList()
    end
end)

-- Start rainbow effect
StartRainbowEffect()

-- Initial expiration check
CheckExpiration()
